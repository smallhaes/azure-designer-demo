# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SubGraphInfo(Model):
    """SubGraphInfo.

    :param name:
    :type name: str
    :param description:
    :type description: str
    :param default_compute_target:
    :type default_compute_target:
     ~designer.models.SubGraphInfoDefaultComputeTarget
    :param default_data_store:
    :type default_data_store: ~designer.models.SubGraphInfoDefaultDataStore
    :param id:
    :type id: str
    :param parent_graph_id:
    :type parent_graph_id: str
    :param pipeline_definition_id:
    :type pipeline_definition_id: str
    :param sub_graph_parameter_assignment:
    :type sub_graph_parameter_assignment:
     list[~designer.models.SubGraphParameterAssignment]
    :param sub_graph_data_path_parameter_assignment:
    :type sub_graph_data_path_parameter_assignment:
     list[~designer.models.SubGraphDataPathParameterAssignment]
    :param sub_graph_default_compute_target_nodes:
    :type sub_graph_default_compute_target_nodes: list[str]
    :param sub_graph_default_data_store_nodes:
    :type sub_graph_default_data_store_nodes: list[str]
    :param inputs:
    :type inputs: list[~designer.models.SubGraphPortInfo]
    :param outputs:
    :type outputs: list[~designer.models.SubGraphPortInfo]
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'default_compute_target': {'key': 'defaultComputeTarget', 'type': 'SubGraphInfoDefaultComputeTarget'},
        'default_data_store': {'key': 'defaultDataStore', 'type': 'SubGraphInfoDefaultDataStore'},
        'id': {'key': 'id', 'type': 'str'},
        'parent_graph_id': {'key': 'parentGraphId', 'type': 'str'},
        'pipeline_definition_id': {'key': 'pipelineDefinitionId', 'type': 'str'},
        'sub_graph_parameter_assignment': {'key': 'subGraphParameterAssignment', 'type': '[SubGraphParameterAssignment]'},
        'sub_graph_data_path_parameter_assignment': {'key': 'subGraphDataPathParameterAssignment', 'type': '[SubGraphDataPathParameterAssignment]'},
        'sub_graph_default_compute_target_nodes': {'key': 'subGraphDefaultComputeTargetNodes', 'type': '[str]'},
        'sub_graph_default_data_store_nodes': {'key': 'subGraphDefaultDataStoreNodes', 'type': '[str]'},
        'inputs': {'key': 'inputs', 'type': '[SubGraphPortInfo]'},
        'outputs': {'key': 'outputs', 'type': '[SubGraphPortInfo]'},
    }

    def __init__(self, **kwargs):
        super(SubGraphInfo, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.description = kwargs.get('description', None)
        self.default_compute_target = kwargs.get('default_compute_target', None)
        self.default_data_store = kwargs.get('default_data_store', None)
        self.id = kwargs.get('id', None)
        self.parent_graph_id = kwargs.get('parent_graph_id', None)
        self.pipeline_definition_id = kwargs.get('pipeline_definition_id', None)
        self.sub_graph_parameter_assignment = kwargs.get('sub_graph_parameter_assignment', None)
        self.sub_graph_data_path_parameter_assignment = kwargs.get('sub_graph_data_path_parameter_assignment', None)
        self.sub_graph_default_compute_target_nodes = kwargs.get('sub_graph_default_compute_target_nodes', None)
        self.sub_graph_default_data_store_nodes = kwargs.get('sub_graph_default_data_store_nodes', None)
        self.inputs = kwargs.get('inputs', None)
        self.outputs = kwargs.get('outputs', None)
