# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CreateRealTimeEndpointRequest(Model):
    """CreateRealTimeEndpointRequest.

    :param name:
    :type name: str
    :param compute_info:
    :type compute_info:
     ~designer.models.CreateRealTimeEndpointRequestComputeInfo
    :param description:
    :type description: str
    :param linked_pipeline_draft_id:
    :type linked_pipeline_draft_id: str
    :param linked_pipeline_run_id:
    :type linked_pipeline_run_id: str
    :param linked_experiment_name:
    :type linked_experiment_name: str
    :param graph_nodes_run_id_mapping: This is a dictionary
    :type graph_nodes_run_id_mapping: dict[str, str]
    :param workflow:
    :type workflow: ~designer.models.CreateRealTimeEndpointRequestWorkflow
    :param inputs:
    :type inputs: list[~designer.models.InputOutputPortMetadata]
    :param outputs:
    :type outputs: list[~designer.models.InputOutputPortMetadata]
    :param example_request:
    :type example_request:
     ~designer.models.CreateRealTimeEndpointRequestExampleRequest
    :param user_storage_connection_string:
    :type user_storage_connection_string: str
    :param user_storage_endpoint_uri:
    :type user_storage_endpoint_uri: str
    :param user_storage_workspace_sai_token:
    :type user_storage_workspace_sai_token: str
    :param user_storage_container_name:
    :type user_storage_container_name: str
    :param workspace_app_insights_instrumnetation_key:
    :type workspace_app_insights_instrumnetation_key: str
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'compute_info': {'key': 'computeInfo', 'type': 'CreateRealTimeEndpointRequestComputeInfo'},
        'description': {'key': 'description', 'type': 'str'},
        'linked_pipeline_draft_id': {'key': 'linkedPipelineDraftId', 'type': 'str'},
        'linked_pipeline_run_id': {'key': 'linkedPipelineRunId', 'type': 'str'},
        'linked_experiment_name': {'key': 'linkedExperimentName', 'type': 'str'},
        'graph_nodes_run_id_mapping': {'key': 'graphNodesRunIdMapping', 'type': '{str}'},
        'workflow': {'key': 'workflow', 'type': 'CreateRealTimeEndpointRequestWorkflow'},
        'inputs': {'key': 'inputs', 'type': '[InputOutputPortMetadata]'},
        'outputs': {'key': 'outputs', 'type': '[InputOutputPortMetadata]'},
        'example_request': {'key': 'exampleRequest', 'type': 'CreateRealTimeEndpointRequestExampleRequest'},
        'user_storage_connection_string': {'key': 'userStorageConnectionString', 'type': 'str'},
        'user_storage_endpoint_uri': {'key': 'userStorageEndpointUri', 'type': 'str'},
        'user_storage_workspace_sai_token': {'key': 'userStorageWorkspaceSaiToken', 'type': 'str'},
        'user_storage_container_name': {'key': 'userStorageContainerName', 'type': 'str'},
        'workspace_app_insights_instrumnetation_key': {'key': 'workspaceAppInsightsInstrumnetationKey', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(CreateRealTimeEndpointRequest, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.compute_info = kwargs.get('compute_info', None)
        self.description = kwargs.get('description', None)
        self.linked_pipeline_draft_id = kwargs.get('linked_pipeline_draft_id', None)
        self.linked_pipeline_run_id = kwargs.get('linked_pipeline_run_id', None)
        self.linked_experiment_name = kwargs.get('linked_experiment_name', None)
        self.graph_nodes_run_id_mapping = kwargs.get('graph_nodes_run_id_mapping', None)
        self.workflow = kwargs.get('workflow', None)
        self.inputs = kwargs.get('inputs', None)
        self.outputs = kwargs.get('outputs', None)
        self.example_request = kwargs.get('example_request', None)
        self.user_storage_connection_string = kwargs.get('user_storage_connection_string', None)
        self.user_storage_endpoint_uri = kwargs.get('user_storage_endpoint_uri', None)
        self.user_storage_workspace_sai_token = kwargs.get('user_storage_workspace_sai_token', None)
        self.user_storage_container_name = kwargs.get('user_storage_container_name', None)
        self.workspace_app_insights_instrumnetation_key = kwargs.get('workspace_app_insights_instrumnetation_key', None)
